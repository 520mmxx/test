name: IPv6 Collection and Update No.2

on:
  schedule:
    - cron: '*/30 * * * *' # Check every 30 minutes
  workflow_dispatch: # Allows manual triggering of the workflow

jobs:
  update_ipv6_addresses:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '16' # Use the latest LTS version

      - name: Install Puppeteer
        run: |
          npm install puppeteer

      - name: Fetch IPv6 addresses
        run: |
          # Create a script to fetch IPv6 addresses
          echo "const puppeteer = require('puppeteer');" > fetchIPv6.js
          echo "const fs = require('fs');" >> fetchIPv6.js
          echo "(async () => {" >> fetchIPv6.js
          echo "    const browser = await puppeteer.launch();" >> fetchIPv6.js
          echo "    const page = await browser.newPage();" >> fetchIPv6.js
          echo "    await page.goto('https://stock.hostmonit.com/CloudFlareYesV6', { waitUntil: 'networkidle2' });" >> fetchIPv6.js
          echo "    await page.waitForTimeout(5000); // Wait for 5 seconds" >> fetchIPv6.js
          echo "    const ipv6Addresses = await page.evaluate(() => {" >> fetchIPv6.js
          echo "        const addresses = [];" >> fetchIPv6.js
          echo "        const elements = document.querySelectorAll('.cell');" >> fetchIPv6.js
          echo "        elements.forEach(el => {" >> fetchIPv6.js
          echo "            addresses.push(el.innerText);" >> fetchIPv6.js
          echo "        });" >> fetchIPv6.js
          echo "        return [...new Set(addresses)];" >> fetchIPv6.js
          echo "    });" >> fetchIPv6.js
          echo "    fs.writeFileSync('ipv6collect2.txt', ipv6Addresses.join('\\n'));" >> fetchIPv6.js
          echo "    await browser.close();" >> fetchIPv6.js
          echo "})();" >> fetchIPv6.js

          # Run the script
          node fetchIPv6.js

      - name: Remove duplicates in ipv6collect2.txt
        run: |
          if [ -f ipv6collect2.txt ]; then
            sort -u ipv6collect2.txt -o ipv6collect2.txt
          fi

      - name: Commit changes
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git add ipv6collect2.txt
          git commit -m "Update ipv6collect2.txt with new IPv6 addresses" || echo "No changes to commit"
          git push
